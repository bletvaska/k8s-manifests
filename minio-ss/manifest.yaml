apiVersion: v1
kind: Service
metadata:
  labels:
    app: minio
  name: minio
  # namespace: application
spec:
  ports:
    - name: ui
      port: 9000
      protocol: TCP
      targetPort: 9000
    - name: rest
      port: 9001
      protocol: TCP
      targetPort: 9001
  selector:
    app: minio
  type: LoadBalancer

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
spec:
  serviceName: "minio"
  replicas: 4
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: bitnami/minio
          env:
            - name: MINIO_ROOT_USER
              value: mirek
            - name: MINIO_ROOT_PASSWORD
              value: jahodka12345
            - name: MINIO_DISTRIBUTED_MODE_ENABLED
              value: "yes"
            - name: MINIO_DISTRIBUTED_NODES
              value: minio-0.minio.default.svc.cluster.local,minio-1.minio.default.svc.cluster.local,minio-2.minio.default.svc.cluster.local,minio-3.minio.default.svc.cluster.local
            - name: MINIO_SKIP_CLIENT
              value: "yes"
          ports:
            - containerPort: 9000
              name: ui
            - containerPort: 9001
              name: rest
          volumeMounts:
            - name: storage
              mountPath: /bitnami/minio/data
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes: ["ReadWriteOnce"]
        # storageClassName: "your-storage-class"
        resources:
          requests:
            storage: 100Mi
